DROP SCHEMA IF EXISTS mcve CASCADE;

CREATE SCHEMA mcve;

CREATE TABLE mcve.test (
  id INT NOT NULL GENERATED ALWAYS AS IDENTITY,
  cd INT,
  
  CONSTRAINT pk_test PRIMARY KEY (id) 
);

CREATE FUNCTION update_timestamp() RETURNS TRIGGER AS '
    BEGIN
        NEW.updated_at := (NOW() AT TIME ZONE ''utc'');
        RETURN NEW;
    END;
' LANGUAGE plpgsql;

CREATE TABLE mcve.products (
  id TEXT NOT NULL CONSTRAINT pk_products PRIMARY KEY
);

CREATE TABLE mcve.photos (
  id TEXT NOT NULL CONSTRAINT pk_photos PRIMARY KEY,
  created_at TIMESTAMP DEFAULT (NOW() AT TIME ZONE 'utc') NOT NULL,
  updated_at TIMESTAMP DEFAULT (NOW() AT TIME ZONE 'utc') NOT NULL,
  product_id TEXT NOT NULL,
  broadcast_type TEXT DEFAULT 'NONE' NOT NULL,
  broadcast_order INT DEFAULT 0 NOT NULL
);

CREATE TRIGGER update_timestamp_field
BEFORE UPDATE ON mcve.photos
FOR EACH ROW EXECUTE PROCEDURE public.update_timestamp();

INSERT INTO mcve.products (id)
VALUES
    ('P001'),
    ('P002');

INSERT INTO mcve.photos (id, product_id, broadcast_type, broadcast_order)
VALUES
    ('5ffadb01-df8b-47c1-ba70-bafb2cca3409', 'P001', 'NONE', 1),
    ('4a902e72-5350-4541-89e8-0f54a4597ab6', 'P001','INTERNAL', 6),
    ('6e9cf78b-f4d2-48d9-8079-f4cb5fa5a8f9', 'P001','INTERNAL', 10),
    ('0c47aca2-ed5c-45e8-9fb4-a1ff5bf4307c', 'P001','PUBLIC', 0),

    ('104c9b6b-05d5-4e1c-a966-f7ce2376e993', 'P002','INTERNAL', 8);
